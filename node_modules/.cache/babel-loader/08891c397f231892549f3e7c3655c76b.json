{"ast":null,"code":"var _jsxFileName = \"/Users/ruchit/my-app/src/components/Search.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getMyShowURL } from \"../constants/index\";\nimport '../assests/Search.css';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.handleSearch = () => {\n      this.fetchData(this.state.searchValue);\n    };\n\n    this.fetchData = searchInput => {\n      const searchUrl = getMyShowURL(searchInput);\n      fetch(searchUrl).then(response => {\n        return response.json();\n      }).then(({\n        Search\n      }) => {\n        this.setState({\n          searchList: Search\n        });\n        console.log(Search);\n      });\n    };\n\n    this.state = {\n      searchValue: \"\",\n      searchList: []\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Search Movie, Series, Episodes\",\n      onChange: event => this.handleOnChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/ruchit/my-app/src/components/Search.js"],"names":["React","Component","Fragment","connect","getMyShowURL","Search","constructor","props","handleOnChange","event","setState","searchValue","target","value","handleSearch","fetchData","state","searchInput","searchUrl","fetch","then","response","json","searchList","console","log","render","mapStateToProps","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAO,uBAAP;;AAEA,MAAMC,MAAN,SAAqBJ,SAArB,CAA+B;AAC3BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SASnBC,cATmB,GASFC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KAXkB;;AAAA,SAanBC,YAbmB,GAaJ,MAAM;AACjB,WAAKC,SAAL,CAAe,KAAKC,KAAL,CAAWL,WAA1B;AACH,KAfkB;;AAAA,SAiBnBI,SAjBmB,GAiBPE,WAAW,IAAI;AACvB,YAAMC,SAAS,GAAGd,YAAY,CAACa,WAAD,CAA9B;AAEAE,MAAAA,KAAK,CAACD,SAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAI;AACd,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIU,CAAC;AAAEf,QAAAA;AAAF,OAAD,KAAgB;AAClB,aAAKK,QAAL,CAAc;AAAEa,UAAAA,UAAU,EAAElB;AAAd,SAAd;AACAmB,QAAAA,OAAO,CAACC,GAAR,CAAYpB,MAAZ;AACH,OAPL;AAQH,KA5BkB;;AAGf,SAAKW,KAAL,GAAa;AACTL,MAAAA,WAAW,EAAE,EADJ;AAETY,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIH;;AAuBDG,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,gCAHhB;AAII,MAAA,QAAQ,EAAEjB,KAAK,IAAI,KAAKD,cAAL,CAAoBC,KAApB,CAJvB;AAKI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWL,WALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAQ,MAAA,OAAO,EAAE,KAAKG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CADJ;AAYH;;AA5C0B;;AA+C/B,eAAeX,OAAO,CAClBwB,eADkB,EAElBC,kBAFkB,CAAP,CAGbvB,MAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { getMyShowURL } from \"../constants/index\";\nimport '../assests/Search.css';\n\nclass Search extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchValue: \"\",\n            searchList: []\n        };\n    }\n\n    handleOnChange = event => {\n        this.setState({ searchValue: event.target.value });\n    };\n\n    handleSearch = () => {\n        this.fetchData(this.state.searchValue);\n    }\n\n    fetchData = searchInput => {\n        const searchUrl = getMyShowURL(searchInput);\n\n        fetch(searchUrl)\n            .then(response => {\n                return response.json();\n            })\n            .then(({ Search }) => {\n                this.setState({ searchList: Search})\n                console.log(Search);\n            });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <input \n                    name=\"text\" \n                    type=\"text\" \n                    placeholder=\"Search Movie, Series, Episodes\" \n                    onChange={event => this.handleOnChange(event)}\n                    value={this.state.searchValue}\n                />\n                <button onClick={this.handleSearch}>Search</button>\n            </Fragment>\n        );\n    }\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Search);\n"]},"metadata":{},"sourceType":"module"}