{"ast":null,"code":"const initialState = {\n  searchValue: \"\",\n  searchList: []\n};\n\nconst rootReducer = (state = initialState, {\n  type,\n  payload\n}) => {\n  console.log(\"in reducer\" + type + payload);\n\n  switch (type) {\n    case 'SEARCH_QUERY':\n      console.log(\"in reducer query\" + payload);\n      return { ...state,\n        searchValue: payload\n      };\n\n    case 'SEARCH_LIST_RESULT':\n      console.log(\"in reducer l\");\n      return { ...state,\n        searchList: payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;","map":{"version":3,"sources":["/Users/ruchit/my-app/src/redux/reducers/saveSearchReducer.js"],"names":["initialState","searchValue","searchList","rootReducer","state","type","payload","console","log"],"mappings":"AACA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,WAAW,EAAE,EADI;AAEjBC,EAAAA,UAAU,EAAE;AAFK,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuB;AAAEK,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AAC7DC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAeH,IAAf,GAAsBC,OAAlC;;AAEA,UAAQD,IAAR;AACI,SAAK,cAAL;AACIE,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAqBF,OAAjC;AACA,aAAO,EACH,GAAGF,KADA;AAEHH,QAAAA,WAAW,EAAEK;AAFV,OAAP;;AAKJ,SAAK,oBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAO,EACH,GAAGJ,KADA;AAEHF,QAAAA,UAAU,EAAEI;AAFT,OAAP;;AAKJ;AACI,aAAOF,KAAP;AAhBR;AAkBD,CArBH;;AAuBE,eAAeD,WAAf","sourcesContent":["\nconst initialState = {\n    searchValue: \"\",\n    searchList: []\n}\n  \nconst rootReducer = (state = initialState, { type, payload }) => {\n    console.log(\"in reducer\" + type + payload);\n    \n    switch (type) {\n        case 'SEARCH_QUERY':\n            console.log(\"in reducer query\" + payload);\n            return {\n                ...state,\n                searchValue: payload\n            };\n    \n        case 'SEARCH_LIST_RESULT':\n            console.log(\"in reducer l\");\n            return {\n                ...state,\n                searchList: payload\n            };\n\n        default:\n            return state;\n    }\n  }\n  \n  export default rootReducer;"]},"metadata":{},"sourceType":"module"}