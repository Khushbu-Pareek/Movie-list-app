{"ast":null,"code":"var _jsxFileName = \"/Users/ruchit/my-app/src/components/List.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOnChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.handleSearch = () => {\n      const {\n        saveSearchQuery\n      } = this.props;\n      const {\n        searchValue\n      } = this.state;\n      saveSearchQuery(searchValue);\n      this.fetchData(searchValue);\n    };\n\n    this.fetchData = searchInput => {\n      const {\n        saveSearchList\n      } = this.props;\n      const searchUrl = getMyShowURL(searchInput);\n      fetch(searchUrl).then(response => {\n        return response.json();\n      }).then(({\n        Search\n      }) => {\n        saveSearchList(Search);\n      });\n    };\n\n    this.state = {\n      searchValue: ''\n    };\n  }\n\n  render() {\n    const {\n      searchList\n    } = this.props;\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Search Movie, Series, Episodes\",\n      onChange: event => this.handleOnChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Search\"), React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, searchList && React.createElement(List, {\n      searchList: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })));\n  }\n\n}\n\nList.propTypes = {\n  searchQuery: PropTypes.string,\n  searchList: PropTypes.array,\n  saveSearchQuery: PropTypes.func,\n  saveSearchList: PropTypes.func\n};\nexport default List;","map":{"version":3,"sources":["/Users/ruchit/my-app/src/components/List.js"],"names":["React","Component","Fragment","connect","PropTypes","List","constructor","props","handleOnChange","event","setState","searchValue","target","value","handleSearch","saveSearchQuery","state","fetchData","searchInput","saveSearchList","searchUrl","getMyShowURL","fetch","then","response","json","Search","render","searchList","propTypes","searchQuery","string","array","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAQnBC,cARmB,GAQFC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KAVkB;;AAAA,SAYnBC,YAZmB,GAYJ,MAAM;AACjB,YAAM;AAAEC,QAAAA;AAAF,UAAsB,KAAKR,KAAjC;AACA,YAAM;AAAEI,QAAAA;AAAF,UAAkB,KAAKK,KAA7B;AAEAD,MAAAA,eAAe,CAACJ,WAAD,CAAf;AACA,WAAKM,SAAL,CAAeN,WAAf;AACH,KAlBkB;;AAAA,SAoBnBM,SApBmB,GAoBPC,WAAW,IAAI;AACvB,YAAM;AAAEC,QAAAA;AAAF,UAAqB,KAAKZ,KAAhC;AACA,YAAMa,SAAS,GAAGC,YAAY,CAACH,WAAD,CAA9B;AAEAI,MAAAA,KAAK,CAACF,SAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAI;AACd,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIU,CAAC;AAAEG,QAAAA;AAAF,OAAD,KAAgB;AAClBP,QAAAA,cAAc,CAACO,MAAD,CAAd;AACH,OANL;AAOH,KA/BkB;;AAGf,SAAKV,KAAL,GAAa;AACTL,MAAAA,WAAW,EAAE;AADJ,KAAb;AAGH;;AA2BDgB,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKrB,KAA5B;AAEA,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,gCAHhB;AAII,MAAA,QAAQ,EAAEE,KAAK,IAAI,KAAKD,cAAL,CAAoBC,KAApB,CAJvB;AAKI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWL,WALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAQ,MAAA,OAAO,EAAE,KAAKG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,EAUI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQc,UAAU,IAAI,oBAAC,IAAD;AAAM,MAAA,UAAU,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFtB,CAVJ,CADJ;AAkBH;;AAvDwB;;AA0D7BvB,IAAI,CAACwB,SAAL,GAAiB;AACbC,EAAAA,WAAW,EAAE1B,SAAS,CAAC2B,MADV;AAEbH,EAAAA,UAAU,EAAExB,SAAS,CAAC4B,KAFT;AAGbjB,EAAAA,eAAe,EAAEX,SAAS,CAAC6B,IAHd;AAIbd,EAAAA,cAAc,EAAEf,SAAS,CAAC6B;AAJb,CAAjB;AAOA,eAAe5B,IAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport PropTypes from 'prop-types'\n\nclass List extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            searchValue: ''\n        };\n    }\n\n    handleOnChange = event => {\n        this.setState({ searchValue: event.target.value });\n    };\n\n    handleSearch = () => {\n        const { saveSearchQuery } = this.props;\n        const { searchValue } = this.state;\n\n        saveSearchQuery(searchValue);\n        this.fetchData(searchValue);\n    }\n\n    fetchData = searchInput => {\n        const { saveSearchList } = this.props;\n        const searchUrl = getMyShowURL(searchInput);\n\n        fetch(searchUrl)\n            .then(response => {\n                return response.json();\n            })\n            .then(({ Search }) => {\n                saveSearchList(Search);\n            });\n    };\n\n    render() {\n        const { searchList } = this.props;\n\n        return (\n            <Fragment>\n                <input \n                    name=\"text\" \n                    type=\"text\" \n                    placeholder=\"Search Movie, Series, Episodes\" \n                    onChange={event => this.handleOnChange(event)}\n                    value={this.state.searchValue}\n                />\n                <button onClick={this.handleSearch}>Search</button>\n\n                <Fragment>\n                    {\n                        searchList && <List searchList />\n                    }\n                </Fragment>\n            </Fragment>\n        );\n    }\n}\n\nList.propTypes = {\n    searchQuery: PropTypes.string,\n    searchList: PropTypes.array,\n    saveSearchQuery: PropTypes.func,\n    saveSearchList: PropTypes.func,\n}\n\nexport default List\n"]},"metadata":{},"sourceType":"module"}