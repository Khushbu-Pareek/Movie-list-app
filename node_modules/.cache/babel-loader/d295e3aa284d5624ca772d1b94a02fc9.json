{"ast":null,"code":"var _jsxFileName = \"/Users/ruchit/my-app/src/components/Search.js\";\nimport React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { getMyShowURL } from \"../constants/index\";\nimport { saveSearchQuery, saveSearchList } from '../actions';\nimport '../assests/Search.css';\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnChange = event => {\n      this.setState({\n        searchValue: event.target.value\n      });\n    };\n\n    this.handleSearch = () => {\n      const {\n        saveSearchQuery\n      } = this.props;\n      const {\n        searchValue\n      } = this.state;\n      saveSearchQuery(saveSearchQuery);\n      this.fetchData(searchValue);\n    };\n\n    this.fetchData = searchInput => {\n      const {\n        saveSearchList\n      } = this.props;\n      const searchUrl = getMyShowURL(searchInput);\n      fetch(searchUrl).then(response => {\n        return response.json();\n      }).then(({\n        Search\n      }) => {\n        saveSearchList(Search);\n        console.log(Search);\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"text\",\n      type: \"text\",\n      placeholder: \"Search Movie, Series, Episodes\",\n      onChange: event => this.handleOnChange(event),\n      value: this.state.searchValue,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleSearch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Search\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  saveSearchQuery: query => dispatch(saveSearchQuery(query)),\n  saveSearchList: list => dispatch(saveSearchList(list))\n});\n\nexport default connect(null, mapDispatchToProps)(Search);","map":{"version":3,"sources":["/Users/ruchit/my-app/src/components/Search.js"],"names":["React","Component","Fragment","connect","getMyShowURL","saveSearchQuery","saveSearchList","Search","handleOnChange","event","setState","searchValue","target","value","handleSearch","props","state","fetchData","searchInput","searchUrl","fetch","then","response","json","console","log","render","mapDispatchToProps","dispatch","query","list"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,YAAhD;AACA,OAAO,uBAAP;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC3BO,cAD2B,GACVC,KAAK,IAAI;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAEF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,KAH0B;;AAAA,SAK3BC,YAL2B,GAKZ,MAAM;AACjB,YAAM;AAAET,QAAAA;AAAF,UAAsB,KAAKU,KAAjC;AACA,YAAM;AAAEJ,QAAAA;AAAF,UAAkB,KAAKK,KAA7B;AAEAX,MAAAA,eAAe,CAACA,eAAD,CAAf;AACA,WAAKY,SAAL,CAAeN,WAAf;AACH,KAX0B;;AAAA,SAa3BM,SAb2B,GAafC,WAAW,IAAI;AACvB,YAAM;AAAEZ,QAAAA;AAAF,UAAqB,KAAKS,KAAhC;AACA,YAAMI,SAAS,GAAGf,YAAY,CAACc,WAAD,CAA9B;AAEAE,MAAAA,KAAK,CAACD,SAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAI;AACd,eAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,OAHL,EAIKF,IAJL,CAIU,CAAC;AAAEd,QAAAA;AAAF,OAAD,KAAgB;AAClBD,QAAAA,cAAc,CAACC,MAAD,CAAd;AACAiB,QAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AACH,OAPL;AAQH,KAzB0B;AAAA;;AA2B3BmB,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,IAAI,EAAC,MADT;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,WAAW,EAAC,gCAHhB;AAII,MAAA,QAAQ,EAAEjB,KAAK,IAAI,KAAKD,cAAL,CAAoBC,KAApB,CAJvB;AAKI,MAAA,KAAK,EAAE,KAAKO,KAAL,CAAWL,WALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAQI;AAAQ,MAAA,OAAO,EAAE,KAAKG,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ,CADJ;AAYH;;AAxC0B;;AA2C/B,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCvB,EAAAA,eAAe,EAAEwB,KAAK,IAAID,QAAQ,CAACvB,eAAe,CAACwB,KAAD,CAAhB,CADE;AAEpCvB,EAAAA,cAAc,EAAEwB,IAAI,IAAIF,QAAQ,CAACtB,cAAc,CAACwB,IAAD,CAAf;AAFI,CAAL,CAAnC;;AAKA,eAAe3B,OAAO,CAClB,IADkB,EAElBwB,kBAFkB,CAAP,CAGbpB,MAHa,CAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux'\nimport { getMyShowURL } from \"../constants/index\";\nimport { saveSearchQuery, saveSearchList } from '../actions';\nimport '../assests/Search.css';\n\nclass Search extends Component {\n    handleOnChange = event => {\n        this.setState({ searchValue: event.target.value });\n    };\n\n    handleSearch = () => {\n        const { saveSearchQuery } = this.props;\n        const { searchValue } = this.state;\n\n        saveSearchQuery(saveSearchQuery);\n        this.fetchData(searchValue);\n    }\n\n    fetchData = searchInput => {\n        const { saveSearchList } = this.props;\n        const searchUrl = getMyShowURL(searchInput);\n\n        fetch(searchUrl)\n            .then(response => {\n                return response.json();\n            })\n            .then(({ Search }) => {\n                saveSearchList(Search);\n                console.log(Search);\n            });\n    };\n\n    render() {\n        return (\n            <Fragment>\n                <input \n                    name=\"text\" \n                    type=\"text\" \n                    placeholder=\"Search Movie, Series, Episodes\" \n                    onChange={event => this.handleOnChange(event)}\n                    value={this.state.searchValue}\n                />\n                <button onClick={this.handleSearch}>Search</button>\n            </Fragment>\n        );\n    }\n}\n  \nconst mapDispatchToProps = dispatch => ({\n    saveSearchQuery: query => dispatch(saveSearchQuery(query)),\n    saveSearchList: list => dispatch(saveSearchList(list)),\n});\n\nexport default connect(\n    null,\n    mapDispatchToProps\n)(Search);\n"]},"metadata":{},"sourceType":"module"}