{"ast":null,"code":"var _jsxFileName = \"/Users/ruchit/my-app/src/components/MyContent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeFaviourtesList } from '../redux/actions/saveSearchAction';\nimport '../assests/List.css';\n\nclass MyContent extends Component {\n  render() {\n    const {\n      favourites = []\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"card-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, favourites.length ? favourites.map(list => this.renderCard(list)) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"No content added to favourites\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    favourites: state.favourites\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  removeFaviourtesList: list => dispatch(removeFaviourtesList(list))\n});\n\nMyContent.propTypes = {\n  favourites: PropTypes.array,\n  removeFaviourtesList: PropTypes.func\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(MyContent);","map":{"version":3,"sources":["/Users/ruchit/my-app/src/components/MyContent.js"],"names":["React","Component","PropTypes","connect","removeFaviourtesList","MyContent","render","favourites","props","length","map","list","renderCard","mapStateToProps","state","mapDispatchToProps","dispatch","propTypes","array","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,oBAAT,QAAqC,mCAArC;AACA,OAAO,qBAAP;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAC9BK,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,UAAU,GAAG;AAAf,QAAsB,KAAKC,KAAjC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQD,UAAU,CAACE,MAAX,GACMF,UAAU,CAACG,GAAX,CAAeC,IAAI,IAAI,KAAKC,UAAL,CAAgBD,IAAhB,CAAvB,CADN,GAEM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAJd,CADJ;AASH;;AAb6B;;AAgBlC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHP,IAAAA,UAAU,EAAEO,KAAK,CAACP;AADf,GAAP;AAGH,CAJD;;AAMA,MAAMQ,kBAAkB,GAAGC,QAAQ,KAAK;AACpCZ,EAAAA,oBAAoB,EAAEO,IAAI,IAAIK,QAAQ,CAACZ,oBAAoB,CAACO,IAAD,CAArB;AADF,CAAL,CAAnC;;AAIAN,SAAS,CAACY,SAAV,GAAsB;AAClBV,EAAAA,UAAU,EAAEL,SAAS,CAACgB,KADJ;AAElBd,EAAAA,oBAAoB,EAAEF,SAAS,CAACiB;AAFd,CAAtB;AAKA,eAAehB,OAAO,CAClBU,eADkB,EAElBE,kBAFkB,CAAP,CAGbV,SAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { removeFaviourtesList } from '../redux/actions/saveSearchAction';\nimport '../assests/List.css';\n\nclass MyContent extends Component {\n    render() {\n        const { favourites = [] } = this.props;\n\n        return (\n            <div className=\"card-container\">\n                { \n                    favourites.length\n                        ? favourites.map(list => this.renderCard(list)) \n                        : <h3>No content added to favourites</h3>\n                }\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        favourites: state.favourites\n    };\n}\n  \nconst mapDispatchToProps = dispatch => ({\n    removeFaviourtesList: list => dispatch(removeFaviourtesList(list)),\n});\n\nMyContent.propTypes = {\n    favourites: PropTypes.array,\n    removeFaviourtesList: PropTypes.func\n}\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MyContent);\n"]},"metadata":{},"sourceType":"module"}